





:class:`InProcessServer`
========================

.. py:class:: ansys.dpf.core.server_types.InProcessServer(ansys_path: Union[str, None] = None, as_global: bool = True, load_operators: bool = True, timeout: None = None, context: ansys.dpf.core.server_context.AvailableServerContexts = server_context.SERVER_CONTEXT)

   Bases: :py:obj:`CServer`


   Server using the InProcess communication protocol.




.. py:currentmodule:: InProcessServer

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~shutdown`
            - Must be implemented by subclasses.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~version`
            - Get the version of the InProcess server.
          * - :py:attr:`~os`
            - Get the operating system of the InProcess server.
          * - :py:attr:`~client`
            - Get the client for the InProcess server.
          * - :py:attr:`~local_server`
            - Get whether the InProcess server is running locally.
          * - :py:attr:`~config`
            - Get the server configuration for the InProcess server.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__eq__`
            - Return true, if the ip and the port are equals.




Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.server_types import InProcessServer

Property detail
---------------

.. py:property:: version

   Get the version of the InProcess server.

   :returns: **version** -- The version of the InProcess server in the format "major.minor".
   :rtype: str

.. py:property:: os

   Get the operating system of the InProcess server.

   :returns: **os** -- The operating system name. For InProcess servers,
             it typically returns the current OS, e.g., "posix" or "nt".
   :rtype: str

.. py:property:: client

   Get the client for the InProcess server.

   :returns: **client** -- InProcess servers do not have a client, so this property returns None.
   :rtype: None

.. py:property:: local_server

   Get whether the InProcess server is running locally.

   :returns: **local_server** -- True, as the InProcess server is always local.
   :rtype: bool

.. py:property:: config

   Get the server configuration for the InProcess server.

   :returns: **config** -- The server configuration for the InProcess server from the AvailableServerConfigs.
   :rtype: AvailableServerConfigs




Method detail
-------------

.. py:method:: shutdown()

   Must be implemented by subclasses.


.. py:method:: __eq__(other_server)

   Return true, if the ip and the port are equals.





