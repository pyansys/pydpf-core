





:class:`faces_area`
===================

.. py:class:: ansys.dpf.core.operators.geo.faces_area.faces_area(mesh=None, mesh_scoping=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Compute the measure of the Faces (surface for 2D faces of a 3D model
   or length for 1D faces of a 2D model) using default shape
   functions, except for polygons.

   :param mesh:
   :type mesh: MeshedRegion
   :param mesh_scoping: If not provided, the measure of all faces in
                        the mesh is computed. if provided,
                        the scoping needs to have "faces"
                        location.
   :type mesh_scoping: Scoping

   :returns: **field**
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.geo.faces_area()

   >>> # Make input connections
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> my_mesh_scoping = dpf.Scoping()
   >>> op.inputs.mesh_scoping.connect(my_mesh_scoping)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.geo.faces_area(
   ...     mesh=my_mesh,
   ...     mesh_scoping=my_mesh_scoping,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: faces_area

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.geo.faces_area import faces_area

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsFacesArea

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsFacesArea




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





