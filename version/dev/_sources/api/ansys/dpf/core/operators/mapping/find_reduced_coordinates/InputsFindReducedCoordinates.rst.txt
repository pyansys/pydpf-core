





:class:`InputsFindReducedCoordinates`
=====================================

.. py:class:: ansys.dpf.core.operators.mapping.find_reduced_coordinates.InputsFindReducedCoordinates(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   find_reduced_coordinates operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mapping.find_reduced_coordinates()
   >>> my_coordinates = dpf.Field()
   >>> op.inputs.coordinates.connect(my_coordinates)
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> my_use_quadratic_elements = bool()
   >>> op.inputs.use_quadratic_elements.connect(my_use_quadratic_elements)



.. py:currentmodule:: InputsFindReducedCoordinates

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~coordinates`
            - Allows to connect coordinates input to the operator.
          * - :py:attr:`~mesh`
            - Allows to connect mesh input to the operator.
          * - :py:attr:`~use_quadratic_elements`
            - Allows to connect use_quadratic_elements input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.mapping.find_reduced_coordinates import InputsFindReducedCoordinates

Property detail
---------------

.. py:property:: coordinates

   Allows to connect coordinates input to the operator.

   :param my_coordinates:
   :type my_coordinates: Field or FieldsContainer or MeshedRegion or MeshesContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mapping.find_reduced_coordinates()
   >>> op.inputs.coordinates.connect(my_coordinates)
   >>> # or
   >>> op.inputs.coordinates(my_coordinates)

.. py:property:: mesh

   Allows to connect mesh input to the operator.

   If the first field in input has no mesh in
   support, then the mesh in this pin is
   expected (default is false). if a
   meshes container with several meshes
   is set, it should be on the same
   label spaces as the coordinates
   fields container.

   :param my_mesh:
   :type my_mesh: MeshedRegion or MeshesContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mapping.find_reduced_coordinates()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> # or
   >>> op.inputs.mesh(my_mesh)

.. py:property:: use_quadratic_elements

   Allows to connect use_quadratic_elements input to the operator.

   If this pin is set to true, reduced
   coordinates are computed on the
   quadratic element if the element is
   quadratic (more precise but less
   performant). default is false.

   :param my_use_quadratic_elements:
   :type my_use_quadratic_elements: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mapping.find_reduced_coordinates()
   >>> op.inputs.use_quadratic_elements.connect(my_use_quadratic_elements)
   >>> # or
   >>> op.inputs.use_quadratic_elements(my_use_quadratic_elements)






