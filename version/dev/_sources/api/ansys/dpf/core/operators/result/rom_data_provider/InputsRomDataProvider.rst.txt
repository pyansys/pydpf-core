





:class:`InputsRomDataProvider`
==============================

.. py:class:: ansys.dpf.core.operators.result.rom_data_provider.InputsRomDataProvider(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   rom_data_provider operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> my_rom_type = bool()
   >>> op.inputs.rom_type.connect(my_rom_type)
   >>> my_reduced_stiff_matrix = dpf.FieldsContainer()
   >>> op.inputs.reduced_stiff_matrix.connect(my_reduced_stiff_matrix)
   >>> my_reduced_damping_matrix = dpf.FieldsContainer()
   >>> op.inputs.reduced_damping_matrix.connect(my_reduced_damping_matrix)
   >>> my_reduced_mass_matrix = dpf.FieldsContainer()
   >>> op.inputs.reduced_mass_matrix.connect(my_reduced_mass_matrix)
   >>> my_data_sources = dpf.DataSources()
   >>> op.inputs.data_sources.connect(my_data_sources)
   >>> my_reduced_rhs_vector = dpf.FieldsContainer()
   >>> op.inputs.reduced_rhs_vector.connect(my_reduced_rhs_vector)
   >>> my_lumped_mass_matrix = dpf.FieldsContainer()
   >>> op.inputs.lumped_mass_matrix.connect(my_lumped_mass_matrix)
   >>> my_mode_shapes = dpf.FieldsContainer()
   >>> op.inputs.mode_shapes.connect(my_mode_shapes)



.. py:currentmodule:: InputsRomDataProvider

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~rom_type`
            - Allows to connect rom_type input to the operator.
          * - :py:attr:`~reduced_stiff_matrix`
            - Allows to connect reduced_stiff_matrix input to the operator.
          * - :py:attr:`~reduced_damping_matrix`
            - Allows to connect reduced_damping_matrix input to the operator.
          * - :py:attr:`~reduced_mass_matrix`
            - Allows to connect reduced_mass_matrix input to the operator.
          * - :py:attr:`~data_sources`
            - Allows to connect data_sources input to the operator.
          * - :py:attr:`~reduced_rhs_vector`
            - Allows to connect reduced_rhs_vector input to the operator.
          * - :py:attr:`~lumped_mass_matrix`
            - Allows to connect lumped_mass_matrix input to the operator.
          * - :py:attr:`~mode_shapes`
            - Allows to connect mode_shapes input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.result.rom_data_provider import InputsRomDataProvider

Property detail
---------------

.. py:property:: rom_type

   Allows to connect rom_type input to the operator.

   If this pin is set to true, customized rom
   data must be given

   :param my_rom_type:
   :type my_rom_type: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.rom_type.connect(my_rom_type)
   >>> # or
   >>> op.inputs.rom_type(my_rom_type)

.. py:property:: reduced_stiff_matrix

   Allows to connect reduced_stiff_matrix input to the operator.

   Fieldscontainers containing the reduced
   stiffness matrix

   :param my_reduced_stiff_matrix:
   :type my_reduced_stiff_matrix: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.reduced_stiff_matrix.connect(my_reduced_stiff_matrix)
   >>> # or
   >>> op.inputs.reduced_stiff_matrix(my_reduced_stiff_matrix)

.. py:property:: reduced_damping_matrix

   Allows to connect reduced_damping_matrix input to the operator.

   Fieldscontainers containing the reduced mass
   matrix

   :param my_reduced_damping_matrix:
   :type my_reduced_damping_matrix: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.reduced_damping_matrix.connect(my_reduced_damping_matrix)
   >>> # or
   >>> op.inputs.reduced_damping_matrix(my_reduced_damping_matrix)

.. py:property:: reduced_mass_matrix

   Allows to connect reduced_mass_matrix input to the operator.

   Fieldscontainers containing the reduced damp
   matrix

   :param my_reduced_mass_matrix:
   :type my_reduced_mass_matrix: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.reduced_mass_matrix.connect(my_reduced_mass_matrix)
   >>> # or
   >>> op.inputs.reduced_mass_matrix(my_reduced_mass_matrix)

.. py:property:: data_sources

   Allows to connect data_sources input to the operator.

   :param my_data_sources:
   :type my_data_sources: DataSources

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.data_sources.connect(my_data_sources)
   >>> # or
   >>> op.inputs.data_sources(my_data_sources)

.. py:property:: reduced_rhs_vector

   Allows to connect reduced_rhs_vector input to the operator.

   Fieldscontainers containing the reduced rhs
   vector

   :param my_reduced_rhs_vector:
   :type my_reduced_rhs_vector: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.reduced_rhs_vector.connect(my_reduced_rhs_vector)
   >>> # or
   >>> op.inputs.reduced_rhs_vector(my_reduced_rhs_vector)

.. py:property:: lumped_mass_matrix

   Allows to connect lumped_mass_matrix input to the operator.

   Fieldscontainers containing the lumped mass
   matrix

   :param my_lumped_mass_matrix:
   :type my_lumped_mass_matrix: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.lumped_mass_matrix.connect(my_lumped_mass_matrix)
   >>> # or
   >>> op.inputs.lumped_mass_matrix(my_lumped_mass_matrix)

.. py:property:: mode_shapes

   Allows to connect mode_shapes input to the operator.

   Fieldscontainers containing the customized
   mode shapes

   :param my_mode_shapes:
   :type my_mode_shapes: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.rom_data_provider()
   >>> op.inputs.mode_shapes.connect(my_mode_shapes)
   >>> # or
   >>> op.inputs.mode_shapes(my_mode_shapes)






