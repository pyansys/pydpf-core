





:class:`InputsAcmoMeshProvider`
===============================

.. py:class:: ansys.dpf.core.operators.mesh.acmo_mesh_provider.InputsAcmoMeshProvider(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   acmo_mesh_provider operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.acmo_mesh_provider()
   >>> my_assembly_mesh = dpf.AnsDispatchHolder()
   >>> op.inputs.assembly_mesh.connect(my_assembly_mesh)
   >>> my_unit = str()
   >>> op.inputs.unit.connect(my_unit)



.. py:currentmodule:: InputsAcmoMeshProvider

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~assembly_mesh`
            - Allows to connect assembly_mesh input to the operator.
          * - :py:attr:`~unit`
            - Allows to connect unit input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.mesh.acmo_mesh_provider import InputsAcmoMeshProvider

Property detail
---------------

.. py:property:: assembly_mesh

   Allows to connect assembly_mesh input to the operator.

   :param my_assembly_mesh:
   :type my_assembly_mesh: AnsDispatchHolder or Struct Iansdispatch

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.acmo_mesh_provider()
   >>> op.inputs.assembly_mesh.connect(my_assembly_mesh)
   >>> # or
   >>> op.inputs.assembly_mesh(my_assembly_mesh)

.. py:property:: unit

   Allows to connect unit input to the operator.

   :param my_unit:
   :type my_unit: str

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.acmo_mesh_provider()
   >>> op.inputs.unit.connect(my_unit)
   >>> # or
   >>> op.inputs.unit(my_unit)






