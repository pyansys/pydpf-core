





:class:`InputsOverlapFields`
============================

.. py:class:: ansys.dpf.core.operators.utility.overlap_fields.InputsOverlapFields(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   overlap_fields operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.overlap_fields()
   >>> my_base_field = dpf.Field()
   >>> op.inputs.base_field.connect(my_base_field)
   >>> my_overlapping_field = dpf.Field()
   >>> op.inputs.overlapping_field.connect(my_overlapping_field)



.. py:currentmodule:: InputsOverlapFields

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~base_field`
            - Allows to connect base_field input to the operator.
          * - :py:attr:`~overlapping_field`
            - Allows to connect overlapping_field input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.overlap_fields import InputsOverlapFields

Property detail
---------------

.. py:property:: base_field

   Allows to connect base_field input to the operator.

   :param my_base_field:
   :type my_base_field: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.overlap_fields()
   >>> op.inputs.base_field.connect(my_base_field)
   >>> # or
   >>> op.inputs.base_field(my_base_field)

.. py:property:: overlapping_field

   Allows to connect overlapping_field input to the operator.

   :param my_overlapping_field:
   :type my_overlapping_field: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.overlap_fields()
   >>> op.inputs.overlapping_field.connect(my_overlapping_field)
   >>> # or
   >>> op.inputs.overlapping_field(my_overlapping_field)






