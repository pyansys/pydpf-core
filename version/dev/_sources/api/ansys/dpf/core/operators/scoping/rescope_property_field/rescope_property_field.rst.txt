





:class:`rescope_property_field`
===============================

.. py:class:: ansys.dpf.core.operators.scoping.rescope_property_field.rescope_property_field(fields=None, mesh_scoping=None, default_value=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Rescopes a property field on the given scoping. If an ID does not
   exist in the original property field, the default value (in 2) is
   used when defined.

   :param fields:
   :type fields: PropertyFieldsContainer or PropertyField
   :param mesh_scoping:
   :type mesh_scoping: Scoping, optional
   :param default_value: If pin 2 is used, the ids not found in the
                         property field are added with this
                         default value.
   :type default_value: int, optional

   :returns: **fields**
   :rtype: PropertyFieldsContainer or PropertyField

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.scoping.rescope_property_field()

   >>> # Make input connections
   >>> my_fields = dpf.PropertyFieldsContainer()
   >>> op.inputs.fields.connect(my_fields)
   >>> my_mesh_scoping = dpf.Scoping()
   >>> op.inputs.mesh_scoping.connect(my_mesh_scoping)
   >>> my_default_value = int()
   >>> op.inputs.default_value.connect(my_default_value)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.scoping.rescope_property_field(
   ...     fields=my_fields,
   ...     mesh_scoping=my_mesh_scoping,
   ...     default_value=my_default_value,
   ... )

   >>> # Get output data
   >>> result_fields = op.outputs.fields()




.. py:currentmodule:: rescope_property_field

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.scoping.rescope_property_field import rescope_property_field

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsRescopePropertyField

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsRescopePropertyField




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





