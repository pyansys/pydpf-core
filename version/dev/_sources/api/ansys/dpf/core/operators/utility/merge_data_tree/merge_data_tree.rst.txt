





:class:`merge_data_tree`
========================

.. py:class:: ansys.dpf.core.operators.utility.merge_data_tree.merge_data_tree(data_tree1=None, data_tree2=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Merges a list of data trees. Attributes names shouldn't be shared
   accross data tree instances.

   :param data_tree1: Either a vector of data trees or data trees
                      from pin 0 to ... to merge.
   :type data_tree1: DataTree
   :param data_tree2: Either a vector of data trees or data trees
                      from pin 0 to ... to merge.
   :type data_tree2: DataTree

   :returns: **any**
   :rtype: Any

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.merge_data_tree()

   >>> # Make input connections
   >>> my_data_tree1 = dpf.DataTree()
   >>> op.inputs.data_tree1.connect(my_data_tree1)
   >>> my_data_tree2 = dpf.DataTree()
   >>> op.inputs.data_tree2.connect(my_data_tree2)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.merge_data_tree(
   ...     data_tree1=my_data_tree1,
   ...     data_tree2=my_data_tree2,
   ... )

   >>> # Get output data
   >>> result_any = op.outputs.any()




.. py:currentmodule:: merge_data_tree

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_data_tree import merge_data_tree

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMergeDataTree

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMergeDataTree




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





