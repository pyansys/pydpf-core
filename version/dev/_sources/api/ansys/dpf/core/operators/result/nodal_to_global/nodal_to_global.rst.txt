





:class:`nodal_to_global`
========================

.. py:class:: ansys.dpf.core.operators.result.nodal_to_global.nodal_to_global(fieldA=None, fieldB=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Rotates nodal elemental results to global coordinate system

   :param fieldA: Vector or tensor field that must be rotated,
                  expressed in nodal coordinate system.
   :type fieldA: Field
   :param fieldB: Nodal euler angles defined from a result
                  file. those must be the rotations
                  from nodal to global.
   :type fieldB: Field

   :returns: **field** -- Rotated field
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.result.nodal_to_global()

   >>> # Make input connections
   >>> my_fieldA = dpf.Field()
   >>> op.inputs.fieldA.connect(my_fieldA)
   >>> my_fieldB = dpf.Field()
   >>> op.inputs.fieldB.connect(my_fieldB)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.result.nodal_to_global(
   ...     fieldA=my_fieldA,
   ...     fieldB=my_fieldB,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: nodal_to_global

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.result.nodal_to_global import nodal_to_global

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsNodalToGlobal

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsNodalToGlobal




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





