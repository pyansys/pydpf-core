





:class:`InputsAssembleScalarsToMatricesFc`
==========================================

.. py:class:: ansys.dpf.core.operators.utility.assemble_scalars_to_matrices_fc.InputsAssembleScalarsToMatricesFc(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   assemble_scalars_to_matrices_fc operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> my_xx = dpf.FieldsContainer()
   >>> op.inputs.xx.connect(my_xx)
   >>> my_yy = dpf.FieldsContainer()
   >>> op.inputs.yy.connect(my_yy)
   >>> my_zz = dpf.FieldsContainer()
   >>> op.inputs.zz.connect(my_zz)
   >>> my_xy = dpf.FieldsContainer()
   >>> op.inputs.xy.connect(my_xy)
   >>> my_yz = dpf.FieldsContainer()
   >>> op.inputs.yz.connect(my_yz)
   >>> my_xz = dpf.FieldsContainer()
   >>> op.inputs.xz.connect(my_xz)
   >>> my_yx = dpf.FieldsContainer()
   >>> op.inputs.yx.connect(my_yx)
   >>> my_zy = dpf.FieldsContainer()
   >>> op.inputs.zy.connect(my_zy)
   >>> my_zx = dpf.FieldsContainer()
   >>> op.inputs.zx.connect(my_zx)
   >>> my_symmetrical = bool()
   >>> op.inputs.symmetrical.connect(my_symmetrical)



.. py:currentmodule:: InputsAssembleScalarsToMatricesFc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~xx`
            - Allows to connect xx input to the operator.
          * - :py:attr:`~yy`
            - Allows to connect yy input to the operator.
          * - :py:attr:`~zz`
            - Allows to connect zz input to the operator.
          * - :py:attr:`~xy`
            - Allows to connect xy input to the operator.
          * - :py:attr:`~yz`
            - Allows to connect yz input to the operator.
          * - :py:attr:`~xz`
            - Allows to connect xz input to the operator.
          * - :py:attr:`~yx`
            - Allows to connect yx input to the operator.
          * - :py:attr:`~zy`
            - Allows to connect zy input to the operator.
          * - :py:attr:`~zx`
            - Allows to connect zx input to the operator.
          * - :py:attr:`~symmetrical`
            - Allows to connect symmetrical input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.assemble_scalars_to_matrices_fc import InputsAssembleScalarsToMatricesFc

Property detail
---------------

.. py:property:: xx

   Allows to connect xx input to the operator.

   :param my_xx:
   :type my_xx: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xx.connect(my_xx)
   >>> # or
   >>> op.inputs.xx(my_xx)

.. py:property:: yy

   Allows to connect yy input to the operator.

   :param my_yy:
   :type my_yy: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yy.connect(my_yy)
   >>> # or
   >>> op.inputs.yy(my_yy)

.. py:property:: zz

   Allows to connect zz input to the operator.

   :param my_zz:
   :type my_zz: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zz.connect(my_zz)
   >>> # or
   >>> op.inputs.zz(my_zz)

.. py:property:: xy

   Allows to connect xy input to the operator.

   :param my_xy:
   :type my_xy: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xy.connect(my_xy)
   >>> # or
   >>> op.inputs.xy(my_xy)

.. py:property:: yz

   Allows to connect yz input to the operator.

   :param my_yz:
   :type my_yz: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yz.connect(my_yz)
   >>> # or
   >>> op.inputs.yz(my_yz)

.. py:property:: xz

   Allows to connect xz input to the operator.

   :param my_xz:
   :type my_xz: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.xz.connect(my_xz)
   >>> # or
   >>> op.inputs.xz(my_xz)

.. py:property:: yx

   Allows to connect yx input to the operator.

   :param my_yx:
   :type my_yx: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.yx.connect(my_yx)
   >>> # or
   >>> op.inputs.yx(my_yx)

.. py:property:: zy

   Allows to connect zy input to the operator.

   :param my_zy:
   :type my_zy: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zy.connect(my_zy)
   >>> # or
   >>> op.inputs.zy(my_zy)

.. py:property:: zx

   Allows to connect zx input to the operator.

   :param my_zx:
   :type my_zx: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.zx.connect(my_zx)
   >>> # or
   >>> op.inputs.zx(my_zx)

.. py:property:: symmetrical

   Allows to connect symmetrical input to the operator.

   :param my_symmetrical:
   :type my_symmetrical: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.assemble_scalars_to_matrices_fc()
   >>> op.inputs.symmetrical.connect(my_symmetrical)
   >>> # or
   >>> op.inputs.symmetrical(my_symmetrical)






