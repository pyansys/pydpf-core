





:class:`InputsIdenticalMeshes`
==============================

.. py:class:: ansys.dpf.core.operators.logic.identical_meshes.InputsIdenticalMeshes(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   identical_meshes operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> my_meshA = dpf.MeshedRegion()
   >>> op.inputs.meshA.connect(my_meshA)
   >>> my_meshB = dpf.MeshedRegion()
   >>> op.inputs.meshB.connect(my_meshB)
   >>> my_small_value = float()
   >>> op.inputs.small_value.connect(my_small_value)
   >>> my_tolerance = float()
   >>> op.inputs.tolerance.connect(my_tolerance)
   >>> my_compare_auxiliary = bool()
   >>> op.inputs.compare_auxiliary.connect(my_compare_auxiliary)



.. py:currentmodule:: InputsIdenticalMeshes

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~meshA`
            - Allows to connect meshA input to the operator.
          * - :py:attr:`~meshB`
            - Allows to connect meshB input to the operator.
          * - :py:attr:`~small_value`
            - Allows to connect small_value input to the operator.
          * - :py:attr:`~tolerance`
            - Allows to connect tolerance input to the operator.
          * - :py:attr:`~compare_auxiliary`
            - Allows to connect compare_auxiliary input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.logic.identical_meshes import InputsIdenticalMeshes

Property detail
---------------

.. py:property:: meshA

   Allows to connect meshA input to the operator.

   :param my_meshA:
   :type my_meshA: MeshedRegion

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.meshA.connect(my_meshA)
   >>> # or
   >>> op.inputs.meshA(my_meshA)

.. py:property:: meshB

   Allows to connect meshB input to the operator.

   :param my_meshB:
   :type my_meshB: MeshedRegion

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.meshB.connect(my_meshB)
   >>> # or
   >>> op.inputs.meshB(my_meshB)

.. py:property:: small_value

   Allows to connect small_value input to the operator.

   Define what is a small value for numeric
   comparison.

   :param my_small_value:
   :type my_small_value: float

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.small_value.connect(my_small_value)
   >>> # or
   >>> op.inputs.small_value(my_small_value)

.. py:property:: tolerance

   Allows to connect tolerance input to the operator.

   Define the relative tolerance ceil for
   numeric comparison.

   :param my_tolerance:
   :type my_tolerance: float

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.tolerance.connect(my_tolerance)
   >>> # or
   >>> op.inputs.tolerance(my_tolerance)

.. py:property:: compare_auxiliary

   Allows to connect compare_auxiliary input to the operator.

   Compare auxiliary data (i.e property fields,
   scopings...). default value is
   'false'.

   :param my_compare_auxiliary:
   :type my_compare_auxiliary: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.identical_meshes()
   >>> op.inputs.compare_auxiliary.connect(my_compare_auxiliary)
   >>> # or
   >>> op.inputs.compare_auxiliary(my_compare_auxiliary)






