





:class:`InputsElementaryDataSelector`
=====================================

.. py:class:: ansys.dpf.core.operators.logic.elementary_data_selector.InputsElementaryDataSelector(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   elementary_data_selector operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.elementary_data_selector()
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)
   >>> my_elementary_data_index = int()
   >>> op.inputs.elementary_data_index.connect(my_elementary_data_index)
   >>> my_default_value = float()
   >>> op.inputs.default_value.connect(my_default_value)
   >>> my_elementary_data_index_2 = int()
   >>> op.inputs.elementary_data_index_2.connect(my_elementary_data_index_2)



.. py:currentmodule:: InputsElementaryDataSelector

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~field`
            - Allows to connect field input to the operator.
          * - :py:attr:`~elementary_data_index`
            - Allows to connect elementary_data_index input to the operator.
          * - :py:attr:`~default_value`
            - Allows to connect default_value input to the operator.
          * - :py:attr:`~elementary_data_index_2`
            - Allows to connect elementary_data_index_2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.logic.elementary_data_selector import InputsElementaryDataSelector

Property detail
---------------

.. py:property:: field

   Allows to connect field input to the operator.

   :param my_field:
   :type my_field: Field or FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.elementary_data_selector()
   >>> op.inputs.field.connect(my_field)
   >>> # or
   >>> op.inputs.field(my_field)

.. py:property:: elementary_data_index

   Allows to connect elementary_data_index input to the operator.

   One or several elementary data index that
   will be extracted from the initial
   field. for field with nature matrix,
   this is the line indices to extract.

   :param my_elementary_data_index:
   :type my_elementary_data_index: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.elementary_data_selector()
   >>> op.inputs.elementary_data_index.connect(my_elementary_data_index)
   >>> # or
   >>> op.inputs.elementary_data_index(my_elementary_data_index)

.. py:property:: default_value

   Allows to connect default_value input to the operator.

   Set a default value for elementary data that
   do not exist.

   :param my_default_value:
   :type my_default_value: float

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.elementary_data_selector()
   >>> op.inputs.default_value.connect(my_default_value)
   >>> # or
   >>> op.inputs.default_value(my_default_value)

.. py:property:: elementary_data_index_2

   Allows to connect elementary_data_index_2 input to the operator.

   For field with nature matrix, this is the
   column indices to extract.

   :param my_elementary_data_index_2:
   :type my_elementary_data_index_2: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.logic.elementary_data_selector()
   >>> op.inputs.elementary_data_index_2.connect(my_elementary_data_index_2)
   >>> # or
   >>> op.inputs.elementary_data_index_2(my_elementary_data_index_2)






