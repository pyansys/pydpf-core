





:class:`InputsChangeShellLayers`
================================

.. py:class:: ansys.dpf.core.operators.utility.change_shell_layers.InputsChangeShellLayers(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   change_shell_layers operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.change_shell_layers()
   >>> my_fields_container = dpf.FieldsContainer()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_e_shell_layer = int()
   >>> op.inputs.e_shell_layer.connect(my_e_shell_layer)
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> my_merge = bool()
   >>> op.inputs.merge.connect(my_merge)



.. py:currentmodule:: InputsChangeShellLayers

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~fields_container`
            - Allows to connect fields_container input to the operator.
          * - :py:attr:`~e_shell_layer`
            - Allows to connect e_shell_layer input to the operator.
          * - :py:attr:`~mesh`
            - Allows to connect mesh input to the operator.
          * - :py:attr:`~merge`
            - Allows to connect merge input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.change_shell_layers import InputsChangeShellLayers

Property detail
---------------

.. py:property:: fields_container

   Allows to connect fields_container input to the operator.

   :param my_fields_container:
   :type my_fields_container: FieldsContainer or Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.change_shell_layers()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> # or
   >>> op.inputs.fields_container(my_fields_container)

.. py:property:: e_shell_layer

   Allows to connect e_shell_layer input to the operator.

   0:top, 1: bottom, 2: bottomtop, 3:mid,
   4:bottomtopmid

   :param my_e_shell_layer:
   :type my_e_shell_layer: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.change_shell_layers()
   >>> op.inputs.e_shell_layer.connect(my_e_shell_layer)
   >>> # or
   >>> op.inputs.e_shell_layer(my_e_shell_layer)

.. py:property:: mesh

   Allows to connect mesh input to the operator.

   Mesh support of the input fields_container,
   in case it does not have one defined.
   if the fields_container contains
   mixed shell/solid results, the mesh
   is required (either by connecting
   this pin or in the support).

   :param my_mesh:
   :type my_mesh: MeshedRegion or MeshesContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.change_shell_layers()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> # or
   >>> op.inputs.mesh(my_mesh)

.. py:property:: merge

   Allows to connect merge input to the operator.

   If set to true, merge shells and solids
   regarding the shell layer set in
   s_shell_layer pin (false by default).

   :param my_merge:
   :type my_merge: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.change_shell_layers()
   >>> op.inputs.merge.connect(my_merge)
   >>> # or
   >>> op.inputs.merge(my_merge)






