





:class:`component_transformer`
==============================

.. py:class:: ansys.dpf.core.operators.logic.component_transformer.component_transformer(field=None, component_number=None, default_value=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Takes the input field and creates a field with overriden value on
   given components.

   :param field:
   :type field: Field or FieldsContainer
   :param component_number: One or several component index that will be
                            modified from the initial field.
   :type component_number: int
   :param default_value: Set a default value for components selected.
   :type default_value: float, optional

   :returns: **field**
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.logic.component_transformer()

   >>> # Make input connections
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)
   >>> my_component_number = int()
   >>> op.inputs.component_number.connect(my_component_number)
   >>> my_default_value = float()
   >>> op.inputs.default_value.connect(my_default_value)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.logic.component_transformer(
   ...     field=my_field,
   ...     component_number=my_component_number,
   ...     default_value=my_default_value,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: component_transformer

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.logic.component_transformer import component_transformer

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsComponentTransformer

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsComponentTransformer




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





