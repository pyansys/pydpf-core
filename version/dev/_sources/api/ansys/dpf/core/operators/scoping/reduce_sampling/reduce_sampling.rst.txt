





:class:`reduce_sampling`
========================

.. py:class:: ansys.dpf.core.operators.scoping.reduce_sampling.reduce_sampling(mesh_scoping=None, denominator=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Take a scoping and remove half of it's content.

   :param mesh_scoping:
   :type mesh_scoping: Scoping
   :param denominator: Set the number of time the scoping is reduced
                       (default is 2). must be integer value
                       above 1.
   :type denominator: int, optional

   :returns: **mesh_scoping**
   :rtype: Scoping

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.scoping.reduce_sampling()

   >>> # Make input connections
   >>> my_mesh_scoping = dpf.Scoping()
   >>> op.inputs.mesh_scoping.connect(my_mesh_scoping)
   >>> my_denominator = int()
   >>> op.inputs.denominator.connect(my_denominator)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.scoping.reduce_sampling(
   ...     mesh_scoping=my_mesh_scoping,
   ...     denominator=my_denominator,
   ... )

   >>> # Get output data
   >>> result_mesh_scoping = op.outputs.mesh_scoping()




.. py:currentmodule:: reduce_sampling

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.scoping.reduce_sampling import reduce_sampling

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsReduceSampling

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsReduceSampling




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





