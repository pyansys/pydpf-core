





:class:`html_doc`
=================

.. py:class:: ansys.dpf.core.operators.utility.html_doc.html_doc(output_path=None, exposure_level=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Create dpf's html documentation. Only on Windows.

   :param output_path: Default is {working
                       directory}/dataprocessingdoc.html
   :type output_path: str, optional
   :param exposure_level: Generate the documentation depending on
                          exposure level : 0 (default) for
                          public operators, 1 includes hidden
                          operator, 2 includes private
                          operator, 3 includes operator without
                          specifications.
   :type exposure_level: int, optional

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.html_doc()

   >>> # Make input connections
   >>> my_output_path = str()
   >>> op.inputs.output_path.connect(my_output_path)
   >>> my_exposure_level = int()
   >>> op.inputs.exposure_level.connect(my_exposure_level)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.html_doc(
   ...     output_path=my_output_path,
   ...     exposure_level=my_exposure_level,
   ... )




.. py:currentmodule:: html_doc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.html_doc import html_doc

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsHtmlDoc

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsHtmlDoc




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





