





:class:`mesh_selection_manager_provider`
========================================

.. py:class:: ansys.dpf.core.operators.metadata.mesh_selection_manager_provider.mesh_selection_manager_provider(streams_container=None, data_sources=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Reads mesh properties from the results files contained in the streams
   or data sources, and makes those properties available through a
   mesh selection manager in output.

   :param streams_container: Streams (result file container) (optional)
   :type streams_container: StreamsContainer, optional
   :param data_sources: If the stream is null, retrieves the file
                        path from the data sources.
   :type data_sources: DataSources

   :returns: **mesh_selection_manager**
   :rtype: MeshSelectionManager

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.metadata.mesh_selection_manager_provider()

   >>> # Make input connections
   >>> my_streams_container = dpf.StreamsContainer()
   >>> op.inputs.streams_container.connect(my_streams_container)
   >>> my_data_sources = dpf.DataSources()
   >>> op.inputs.data_sources.connect(my_data_sources)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.metadata.mesh_selection_manager_provider(
   ...     streams_container=my_streams_container,
   ...     data_sources=my_data_sources,
   ... )

   >>> # Get output data
   >>> result_mesh_selection_manager = op.outputs.mesh_selection_manager()




.. py:currentmodule:: mesh_selection_manager_provider

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.metadata.mesh_selection_manager_provider import mesh_selection_manager_provider

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMeshSelectionManagerProvider

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMeshSelectionManagerProvider




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





