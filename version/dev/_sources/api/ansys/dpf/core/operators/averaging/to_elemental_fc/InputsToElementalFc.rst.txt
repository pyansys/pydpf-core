





:class:`InputsToElementalFc`
============================

.. py:class:: ansys.dpf.core.operators.averaging.to_elemental_fc.InputsToElementalFc(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   to_elemental_fc operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> my_fields_container = dpf.FieldsContainer()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> my_mesh_scoping = dpf.Scoping()
   >>> op.inputs.mesh_scoping.connect(my_mesh_scoping)
   >>> my_smoothen_values = bool()
   >>> op.inputs.smoothen_values.connect(my_smoothen_values)
   >>> my_collapse_shell_layers = bool()
   >>> op.inputs.collapse_shell_layers.connect(my_collapse_shell_layers)
   >>> my_merge_solid_shell = bool()
   >>> op.inputs.merge_solid_shell.connect(my_merge_solid_shell)
   >>> my_shell_layer = int()
   >>> op.inputs.shell_layer.connect(my_shell_layer)



.. py:currentmodule:: InputsToElementalFc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~fields_container`
            - Allows to connect fields_container input to the operator.
          * - :py:attr:`~mesh`
            - Allows to connect mesh input to the operator.
          * - :py:attr:`~mesh_scoping`
            - Allows to connect mesh_scoping input to the operator.
          * - :py:attr:`~smoothen_values`
            - Allows to connect smoothen_values input to the operator.
          * - :py:attr:`~collapse_shell_layers`
            - Allows to connect collapse_shell_layers input to the operator.
          * - :py:attr:`~merge_solid_shell`
            - Allows to connect merge_solid_shell input to the operator.
          * - :py:attr:`~shell_layer`
            - Allows to connect shell_layer input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.averaging.to_elemental_fc import InputsToElementalFc

Property detail
---------------

.. py:property:: fields_container

   Allows to connect fields_container input to the operator.

   :param my_fields_container:
   :type my_fields_container: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> # or
   >>> op.inputs.fields_container(my_fields_container)

.. py:property:: mesh

   Allows to connect mesh input to the operator.

   :param my_mesh:
   :type my_mesh: MeshedRegion

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> # or
   >>> op.inputs.mesh(my_mesh)

.. py:property:: mesh_scoping

   Allows to connect mesh_scoping input to the operator.

   :param my_mesh_scoping:
   :type my_mesh_scoping: Scoping

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.mesh_scoping.connect(my_mesh_scoping)
   >>> # or
   >>> op.inputs.mesh_scoping(my_mesh_scoping)

.. py:property:: smoothen_values

   Allows to connect smoothen_values input to the operator.

   If it is set to true, elemental nodal fields
   are first averaged on nodes and then
   averaged on elements (default is
   false).

   :param my_smoothen_values:
   :type my_smoothen_values: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.smoothen_values.connect(my_smoothen_values)
   >>> # or
   >>> op.inputs.smoothen_values(my_smoothen_values)

.. py:property:: collapse_shell_layers

   Allows to connect collapse_shell_layers input to the operator.

   If true shell layers are averaged as well
   (default is false)

   :param my_collapse_shell_layers:
   :type my_collapse_shell_layers: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.collapse_shell_layers.connect(my_collapse_shell_layers)
   >>> # or
   >>> op.inputs.collapse_shell_layers(my_collapse_shell_layers)

.. py:property:: merge_solid_shell

   Allows to connect merge_solid_shell input to the operator.

   For shell/solid mixed field, gather in one
   field all solids and shells (only on
   one layer, false by default).

   :param my_merge_solid_shell:
   :type my_merge_solid_shell: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.merge_solid_shell.connect(my_merge_solid_shell)
   >>> # or
   >>> op.inputs.merge_solid_shell(my_merge_solid_shell)

.. py:property:: shell_layer

   Allows to connect shell_layer input to the operator.

   If merge_solid_shell pin set to true, user
   have to choose a shell layer. for
   shell/solid mixed field, gather in
   one field all solids and shells (only
   on one layer).

   :param my_shell_layer:
   :type my_shell_layer: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.averaging.to_elemental_fc()
   >>> op.inputs.shell_layer.connect(my_shell_layer)
   >>> # or
   >>> op.inputs.shell_layer(my_shell_layer)






