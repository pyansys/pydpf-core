





:class:`InputsSerializeToHdf5`
==============================

.. py:class:: ansys.dpf.core.operators.serialization.serialize_to_hdf5.InputsSerializeToHdf5(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   serialize_to_hdf5 operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> my_file_path = str()
   >>> op.inputs.file_path.connect(my_file_path)
   >>> my_export_floats = bool()
   >>> op.inputs.export_floats.connect(my_export_floats)
   >>> my_export_flat_vectors = bool()
   >>> op.inputs.export_flat_vectors.connect(my_export_flat_vectors)
   >>> my_data1 = dpf.()
   >>> op.inputs.data1.connect(my_data1)
   >>> my_data2 = dpf.()
   >>> op.inputs.data2.connect(my_data2)



.. py:currentmodule:: InputsSerializeToHdf5

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~file_path`
            - Allows to connect file_path input to the operator.
          * - :py:attr:`~export_floats`
            - Allows to connect export_floats input to the operator.
          * - :py:attr:`~export_flat_vectors`
            - Allows to connect export_flat_vectors input to the operator.
          * - :py:attr:`~data1`
            - Allows to connect data1 input to the operator.
          * - :py:attr:`~data2`
            - Allows to connect data2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.serialization.serialize_to_hdf5 import InputsSerializeToHdf5

Property detail
---------------

.. py:property:: file_path

   Allows to connect file_path input to the operator.

   Output file path with .h5 extension

   :param my_file_path:
   :type my_file_path: str

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> op.inputs.file_path.connect(my_file_path)
   >>> # or
   >>> op.inputs.file_path(my_file_path)

.. py:property:: export_floats

   Allows to connect export_floats input to the operator.

   Converts double to float to reduce file size
   (default is true)

   :param my_export_floats:
   :type my_export_floats: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> op.inputs.export_floats.connect(my_export_floats)
   >>> # or
   >>> op.inputs.export_floats(my_export_floats)

.. py:property:: export_flat_vectors

   Allows to connect export_flat_vectors input to the operator.

   If true, vectors and matrices data are
   exported flat (x1,y1,z1,x2,y2,z2..)
   (default is false)

   :param my_export_flat_vectors:
   :type my_export_flat_vectors: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> op.inputs.export_flat_vectors.connect(my_export_flat_vectors)
   >>> # or
   >>> op.inputs.export_flat_vectors(my_export_flat_vectors)

.. py:property:: data1

   Allows to connect data1 input to the operator.

   Only the data set explicitly to export is
   exported

   :param my_data1:

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> op.inputs.data1.connect(my_data1)
   >>> # or
   >>> op.inputs.data1(my_data1)

.. py:property:: data2

   Allows to connect data2 input to the operator.

   Only the data set explicitly to export is
   exported

   :param my_data2:

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serialize_to_hdf5()
   >>> op.inputs.data2.connect(my_data2)
   >>> # or
   >>> op.inputs.data2(my_data2)






