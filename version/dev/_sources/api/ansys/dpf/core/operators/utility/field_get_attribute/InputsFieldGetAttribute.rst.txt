





:class:`InputsFieldGetAttribute`
================================

.. py:class:: ansys.dpf.core.operators.utility.field_get_attribute.InputsFieldGetAttribute(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   field_get_attribute operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.field_get_attribute()
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)
   >>> my_property_name = str()
   >>> op.inputs.property_name.connect(my_property_name)



.. py:currentmodule:: InputsFieldGetAttribute

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~field`
            - Allows to connect field input to the operator.
          * - :py:attr:`~property_name`
            - Allows to connect property_name input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.field_get_attribute import InputsFieldGetAttribute

Property detail
---------------

.. py:property:: field

   Allows to connect field input to the operator.

   :param my_field:
   :type my_field: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.field_get_attribute()
   >>> op.inputs.field.connect(my_field)
   >>> # or
   >>> op.inputs.field(my_field)

.. py:property:: property_name

   Allows to connect property_name input to the operator.

   Accepted inputs are: 'time_freq_support' and
   'scoping'.

   :param my_property_name:
   :type my_property_name: str

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.field_get_attribute()
   >>> op.inputs.property_name.connect(my_property_name)
   >>> # or
   >>> op.inputs.property_name(my_property_name)






