





:class:`InputsMergeToFieldMatrix`
=================================

.. py:class:: ansys.dpf.core.operators.utility.merge_to_field_matrix.InputsMergeToFieldMatrix(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   merge_to_field_matrix operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_to_field_matrix()
   >>> my_fields1 = dpf.Field()
   >>> op.inputs.fields1.connect(my_fields1)
   >>> my_fields2 = dpf.Field()
   >>> op.inputs.fields2.connect(my_fields2)



.. py:currentmodule:: InputsMergeToFieldMatrix

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~fields1`
            - Allows to connect fields1 input to the operator.
          * - :py:attr:`~fields2`
            - Allows to connect fields2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_to_field_matrix import InputsMergeToFieldMatrix

Property detail
---------------

.. py:property:: fields1

   Allows to connect fields1 input to the operator.

   Either a fields container, a vector of fields
   to merge, or fields from pin 0 to ...

   :param my_fields1:
   :type my_fields1: Field or FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_to_field_matrix()
   >>> op.inputs.fields1.connect(my_fields1)
   >>> # or
   >>> op.inputs.fields1(my_fields1)

.. py:property:: fields2

   Allows to connect fields2 input to the operator.

   Either a fields container, a vector of fields
   to merge, or fields from pin 0 to ...

   :param my_fields2:
   :type my_fields2: Field or FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_to_field_matrix()
   >>> op.inputs.fields2.connect(my_fields2)
   >>> # or
   >>> op.inputs.fields2(my_fields2)






