





:class:`InputsMergeScopings`
============================

.. py:class:: ansys.dpf.core.operators.utility.merge_scopings.InputsMergeScopings(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   merge_scopings operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_scopings()
   >>> my_scopings1 = dpf.Scoping()
   >>> op.inputs.scopings1.connect(my_scopings1)
   >>> my_scopings2 = dpf.Scoping()
   >>> op.inputs.scopings2.connect(my_scopings2)



.. py:currentmodule:: InputsMergeScopings

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~scopings1`
            - Allows to connect scopings1 input to the operator.
          * - :py:attr:`~scopings2`
            - Allows to connect scopings2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_scopings import InputsMergeScopings

Property detail
---------------

.. py:property:: scopings1

   Allows to connect scopings1 input to the operator.

   Either a scopings container, a vector of
   scopings to merge, or scopings from
   pin 0 to ...

   :param my_scopings1:
   :type my_scopings1: Scoping or ScopingsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_scopings()
   >>> op.inputs.scopings1.connect(my_scopings1)
   >>> # or
   >>> op.inputs.scopings1(my_scopings1)

.. py:property:: scopings2

   Allows to connect scopings2 input to the operator.

   Either a scopings container, a vector of
   scopings to merge, or scopings from
   pin 0 to ...

   :param my_scopings2:
   :type my_scopings2: Scoping or ScopingsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_scopings()
   >>> op.inputs.scopings2.connect(my_scopings2)
   >>> # or
   >>> op.inputs.scopings2(my_scopings2)






