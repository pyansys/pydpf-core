





:class:`compute_element_centroids`
==================================

.. py:class:: ansys.dpf.core.operators.scoping.compute_element_centroids.compute_element_centroids(element_scoping=None, mesh=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Computes the element centroids of the mesh. It also outputs the
   element measure.

   :param element_scoping: If provided, only the centroids of the
                           elements in the scoping are computed.
   :type element_scoping: Scoping, optional
   :param mesh: Mesh to compute centroids
   :type mesh: MeshedRegion

   :returns: * **centroids** (*Field*) -- Element centroids.
             * **measure** (*Field*) -- Element measure (length, surface or volume
               depending on the dimension of the
               element).

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.scoping.compute_element_centroids()

   >>> # Make input connections
   >>> my_element_scoping = dpf.Scoping()
   >>> op.inputs.element_scoping.connect(my_element_scoping)
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.scoping.compute_element_centroids(
   ...     element_scoping=my_element_scoping,
   ...     mesh=my_mesh,
   ... )

   >>> # Get output data
   >>> result_centroids = op.outputs.centroids()
   >>> result_measure = op.outputs.measure()




.. py:currentmodule:: compute_element_centroids

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.scoping.compute_element_centroids import compute_element_centroids

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsComputeElementCentroids

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsComputeElementCentroids




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





