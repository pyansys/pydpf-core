





:class:`InputsMergeGenericDataContainer`
========================================

.. py:class:: ansys.dpf.core.operators.utility.merge_generic_data_container.InputsMergeGenericDataContainer(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   merge_generic_data_container operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_generic_data_container()
   >>> my_generic_data_container1 = dpf.GenericDataContainer()
   >>> op.inputs.generic_data_container1.connect(my_generic_data_container1)
   >>> my_generic_data_container2 = dpf.GenericDataContainer()
   >>> op.inputs.generic_data_container2.connect(my_generic_data_container2)



.. py:currentmodule:: InputsMergeGenericDataContainer

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~generic_data_container1`
            - Allows to connect generic_data_container1 input to the operator.
          * - :py:attr:`~generic_data_container2`
            - Allows to connect generic_data_container2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_generic_data_container import InputsMergeGenericDataContainer

Property detail
---------------

.. py:property:: generic_data_container1

   Allows to connect generic_data_container1 input to the operator.

   Either a vector of generic data containers
   (sharing the same data types) or
   generic data containers from pin 0 to
   ... to merge. supported types rely on
   existing type specific merge
   operators.

   :param my_generic_data_container1:
   :type my_generic_data_container1: GenericDataContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_generic_data_container()
   >>> op.inputs.generic_data_container1.connect(my_generic_data_container1)
   >>> # or
   >>> op.inputs.generic_data_container1(my_generic_data_container1)

.. py:property:: generic_data_container2

   Allows to connect generic_data_container2 input to the operator.

   Either a vector of generic data containers
   (sharing the same data types) or
   generic data containers from pin 0 to
   ... to merge. supported types rely on
   existing type specific merge
   operators.

   :param my_generic_data_container2:
   :type my_generic_data_container2: GenericDataContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_generic_data_container()
   >>> op.inputs.generic_data_container2.connect(my_generic_data_container2)
   >>> # or
   >>> op.inputs.generic_data_container2(my_generic_data_container2)






