





:class:`InputsDecimateMesh`
===========================

.. py:class:: ansys.dpf.core.operators.mesh.decimate_mesh.InputsDecimateMesh(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   decimate_mesh operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.decimate_mesh()
   >>> my_mesh = dpf.MeshedRegion()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> my_preservation_ratio = float()
   >>> op.inputs.preservation_ratio.connect(my_preservation_ratio)
   >>> my_aggressiveness = int()
   >>> op.inputs.aggressiveness.connect(my_aggressiveness)



.. py:currentmodule:: InputsDecimateMesh

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~mesh`
            - Allows to connect mesh input to the operator.
          * - :py:attr:`~preservation_ratio`
            - Allows to connect preservation_ratio input to the operator.
          * - :py:attr:`~aggressiveness`
            - Allows to connect aggressiveness input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.mesh.decimate_mesh import InputsDecimateMesh

Property detail
---------------

.. py:property:: mesh

   Allows to connect mesh input to the operator.

   Mesh to decimate

   :param my_mesh:
   :type my_mesh: MeshedRegion

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.decimate_mesh()
   >>> op.inputs.mesh.connect(my_mesh)
   >>> # or
   >>> op.inputs.mesh(my_mesh)

.. py:property:: preservation_ratio

   Allows to connect preservation_ratio input to the operator.

   Target ratio of elements to preserve, the
   actual number of elements preserved
   might differ. default value is 0.5.

   :param my_preservation_ratio:
   :type my_preservation_ratio: float

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.decimate_mesh()
   >>> op.inputs.preservation_ratio.connect(my_preservation_ratio)
   >>> # or
   >>> op.inputs.preservation_ratio(my_preservation_ratio)

.. py:property:: aggressiveness

   Allows to connect aggressiveness input to the operator.

   Quality measure for the resulting decimated
   mesh. lower aggresiveness will
   provide a higher quality mesh with
   the tradeoff of higher execution
   time. value range is 0 to 150,
   default is 0.

   :param my_aggressiveness:
   :type my_aggressiveness: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.mesh.decimate_mesh()
   >>> op.inputs.aggressiveness.connect(my_aggressiveness)
   >>> # or
   >>> op.inputs.aggressiveness(my_aggressiveness)






