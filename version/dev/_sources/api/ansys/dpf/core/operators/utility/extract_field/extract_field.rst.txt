





:class:`extract_field`
======================

.. py:class:: ansys.dpf.core.operators.utility.extract_field.extract_field(fields_container=None, indices=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Extracts the fields at the indices defined in the vector (in 1) from
   the fields container (in 0).

   :param fields_container: If a field is in input, it is passed on as an
                            output
   :type fields_container: Field or FieldsContainer
   :param indices: Default is the first field
   :type indices: optional

   :returns: **field**
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.extract_field()

   >>> # Make input connections
   >>> my_fields_container = dpf.Field()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_indices = dpf.()
   >>> op.inputs.indices.connect(my_indices)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.extract_field(
   ...     fields_container=my_fields_container,
   ...     indices=my_indices,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: extract_field

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.extract_field import extract_field

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsExtractField

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsExtractField




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





