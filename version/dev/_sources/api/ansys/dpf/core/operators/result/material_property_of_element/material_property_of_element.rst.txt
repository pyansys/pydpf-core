





:class:`material_property_of_element`
=====================================

.. py:class:: ansys.dpf.core.operators.result.material_property_of_element.material_property_of_element(streams_container=None, data_sources=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Loads the appropriate operator based on the data sources and retrieves
   material properties.

   :param streams_container:
   :type streams_container: StreamsContainer, optional
   :param data_sources:
   :type data_sources: DataSources

   :returns: **material_properties** -- Material properties
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.result.material_property_of_element()

   >>> # Make input connections
   >>> my_streams_container = dpf.StreamsContainer()
   >>> op.inputs.streams_container.connect(my_streams_container)
   >>> my_data_sources = dpf.DataSources()
   >>> op.inputs.data_sources.connect(my_data_sources)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.result.material_property_of_element(
   ...     streams_container=my_streams_container,
   ...     data_sources=my_data_sources,
   ... )

   >>> # Get output data
   >>> result_material_properties = op.outputs.material_properties()




.. py:currentmodule:: material_property_of_element

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.result.material_property_of_element import material_property_of_element

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMaterialPropertyOfElement

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMaterialPropertyOfElement




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





