





:class:`InputsMergePropertyFields`
==================================

.. py:class:: ansys.dpf.core.operators.utility.merge_property_fields.InputsMergePropertyFields(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   merge_property_fields operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_property_fields()
   >>> my_naive_merge = bool()
   >>> op.inputs.naive_merge.connect(my_naive_merge)
   >>> my_property_fields1 = dpf.PropertyField()
   >>> op.inputs.property_fields1.connect(my_property_fields1)
   >>> my_property_fields2 = dpf.PropertyField()
   >>> op.inputs.property_fields2.connect(my_property_fields2)



.. py:currentmodule:: InputsMergePropertyFields

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~naive_merge`
            - Allows to connect naive_merge input to the operator.
          * - :py:attr:`~property_fields1`
            - Allows to connect property_fields1 input to the operator.
          * - :py:attr:`~property_fields2`
            - Allows to connect property_fields2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_property_fields import InputsMergePropertyFields

Property detail
---------------

.. py:property:: naive_merge

   Allows to connect naive_merge input to the operator.

   If true, merge the input property fields
   assuming that there is no repetition
   in their scoping ids. default is
   false.

   :param my_naive_merge:
   :type my_naive_merge: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_property_fields()
   >>> op.inputs.naive_merge.connect(my_naive_merge)
   >>> # or
   >>> op.inputs.naive_merge(my_naive_merge)

.. py:property:: property_fields1

   Allows to connect property_fields1 input to the operator.

   Either a property fields container, a vector
   of property fields to merge or
   property fields from pin 0 to ...

   :param my_property_fields1:
   :type my_property_fields1: PropertyField or PropertyFieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_property_fields()
   >>> op.inputs.property_fields1.connect(my_property_fields1)
   >>> # or
   >>> op.inputs.property_fields1(my_property_fields1)

.. py:property:: property_fields2

   Allows to connect property_fields2 input to the operator.

   Either a property fields container, a vector
   of property fields to merge or
   property fields from pin 0 to ...

   :param my_property_fields2:
   :type my_property_fields2: PropertyField or PropertyFieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.merge_property_fields()
   >>> op.inputs.property_fields2.connect(my_property_fields2)
   >>> # or
   >>> op.inputs.property_fields2(my_property_fields2)






