





:class:`InputsMinMaxOverTimeByEntity`
=====================================

.. py:class:: ansys.dpf.core.operators.min_max.min_max_over_time_by_entity.InputsMinMaxOverTimeByEntity(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   min_max_over_time_by_entity operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.min_max.min_max_over_time_by_entity()
   >>> my_fields_container = dpf.FieldsContainer()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_compute_absolute_value = bool()
   >>> op.inputs.compute_absolute_value.connect(my_compute_absolute_value)
   >>> my_compute_amplitude = bool()
   >>> op.inputs.compute_amplitude.connect(my_compute_amplitude)



.. py:currentmodule:: InputsMinMaxOverTimeByEntity

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~fields_container`
            - Allows to connect fields_container input to the operator.
          * - :py:attr:`~compute_absolute_value`
            - Allows to connect compute_absolute_value input to the operator.
          * - :py:attr:`~compute_amplitude`
            - Allows to connect compute_amplitude input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.min_max.min_max_over_time_by_entity import InputsMinMaxOverTimeByEntity

Property detail
---------------

.. py:property:: fields_container

   Allows to connect fields_container input to the operator.

   :param my_fields_container:
   :type my_fields_container: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.min_max.min_max_over_time_by_entity()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> # or
   >>> op.inputs.fields_container(my_fields_container)

.. py:property:: compute_absolute_value

   Allows to connect compute_absolute_value input to the operator.

   Calculate the absolute value of field
   entities before computing the
   min/max.

   :param my_compute_absolute_value:
   :type my_compute_absolute_value: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.min_max.min_max_over_time_by_entity()
   >>> op.inputs.compute_absolute_value.connect(my_compute_absolute_value)
   >>> # or
   >>> op.inputs.compute_absolute_value(my_compute_absolute_value)

.. py:property:: compute_amplitude

   Allows to connect compute_amplitude input to the operator.

   Do calculate amplitude.

   :param my_compute_amplitude:
   :type my_compute_amplitude: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.min_max.min_max_over_time_by_entity()
   >>> op.inputs.compute_amplitude.connect(my_compute_amplitude)
   >>> # or
   >>> op.inputs.compute_amplitude(my_compute_amplitude)






