





:class:`default_value`
======================

.. py:class:: ansys.dpf.core.operators.utility.default_value.default_value(forced_value=None, default_value=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Default return value from input pin 1 to output pin 0 if there is
   nothing on input pin 0.

   :param forced_value:
   :type forced_value: optional
   :param default_value:

   :rtype: output

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.default_value()

   >>> # Make input connections
   >>> my_forced_value = dpf.()
   >>> op.inputs.forced_value.connect(my_forced_value)
   >>> my_default_value = dpf.()
   >>> op.inputs.default_value.connect(my_default_value)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.default_value(
   ...     forced_value=my_forced_value,
   ...     default_value=my_default_value,
   ... )

   >>> # Get output data
   >>> result_output = op.outputs.output()




.. py:currentmodule:: default_value

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.default_value import default_value

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsDefaultValue

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsDefaultValue




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





