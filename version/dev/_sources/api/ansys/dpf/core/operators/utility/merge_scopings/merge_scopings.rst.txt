





:class:`merge_scopings`
=======================

.. py:class:: ansys.dpf.core.operators.utility.merge_scopings.merge_scopings(scopings1=None, scopings2=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Assembles a set of scopings into a unique one.

   :param scopings1: Either a scopings container, a vector of
                     scopings to merge, or scopings from
                     pin 0 to ...
   :type scopings1: Scoping or ScopingsContainer
   :param scopings2: Either a scopings container, a vector of
                     scopings to merge, or scopings from
                     pin 0 to ...
   :type scopings2: Scoping or ScopingsContainer

   :returns: **merged_scoping**
   :rtype: Scoping

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.merge_scopings()

   >>> # Make input connections
   >>> my_scopings1 = dpf.Scoping()
   >>> op.inputs.scopings1.connect(my_scopings1)
   >>> my_scopings2 = dpf.Scoping()
   >>> op.inputs.scopings2.connect(my_scopings2)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.merge_scopings(
   ...     scopings1=my_scopings1,
   ...     scopings2=my_scopings2,
   ... )

   >>> # Get output data
   >>> result_merged_scoping = op.outputs.merged_scoping()




.. py:currentmodule:: merge_scopings

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.merge_scopings import merge_scopings

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMergeScopings

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMergeScopings




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





