





:class:`mesh_plan_clip`
=======================

.. py:class:: ansys.dpf.core.operators.mesh.mesh_plan_clip.mesh_plan_clip(mesh_or_field=None, normal=None, origin=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Clips a volume mesh along a plane and keeps one side.

   :param mesh_or_field:
   :type mesh_or_field: MeshedRegion or Field
   :param normal: An overall 3d vector that gives the normal
                  direction of the plane.
   :type normal: Field
   :param origin: An overall 3d vector that gives a point of
                  the plane.
   :type origin: Field

   :returns: * **field** (*Field*)
             * **mesh** (*MeshedRegion*)

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.mesh.mesh_plan_clip()

   >>> # Make input connections
   >>> my_mesh_or_field = dpf.MeshedRegion()
   >>> op.inputs.mesh_or_field.connect(my_mesh_or_field)
   >>> my_normal = dpf.Field()
   >>> op.inputs.normal.connect(my_normal)
   >>> my_origin = dpf.Field()
   >>> op.inputs.origin.connect(my_origin)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.mesh.mesh_plan_clip(
   ...     mesh_or_field=my_mesh_or_field,
   ...     normal=my_normal,
   ...     origin=my_origin,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()
   >>> result_mesh = op.outputs.mesh()




.. py:currentmodule:: mesh_plan_clip

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.mesh.mesh_plan_clip import mesh_plan_clip

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMeshPlanClip

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMeshPlanClip




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





