





:class:`incremental_concatenate_as_fc`
======================================

.. py:class:: ansys.dpf.core.operators.utility.incremental_concatenate_as_fc.incremental_concatenate_as_fc(field=None, label=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Assemble fields in a fields container.

   :param field:
   :type field: Field
   :param label: Label space value that must be applied to the
                 added field.
   :type label: dict, optional

   :returns: **output**
   :rtype: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.utility.incremental_concatenate_as_fc()

   >>> # Make input connections
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)
   >>> my_label = dict()
   >>> op.inputs.label.connect(my_label)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.utility.incremental_concatenate_as_fc(
   ...     field=my_field,
   ...     label=my_label,
   ... )

   >>> # Get output data
   >>> result_output = op.outputs.output()




.. py:currentmodule:: incremental_concatenate_as_fc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.incremental_concatenate_as_fc import incremental_concatenate_as_fc

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsIncrementalConcatenateAsFc

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsIncrementalConcatenateAsFc




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





