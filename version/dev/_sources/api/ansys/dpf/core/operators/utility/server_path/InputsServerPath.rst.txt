





:class:`InputsServerPath`
=========================

.. py:class:: ansys.dpf.core.operators.utility.server_path.InputsServerPath(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   server_path operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.server_path()
   >>> my_subpath = int()
   >>> op.inputs.subpath.connect(my_subpath)



.. py:currentmodule:: InputsServerPath

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~subpath`
            - Allows to connect subpath input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.server_path import InputsServerPath

Property detail
---------------

.. py:property:: subpath

   Allows to connect subpath input to the operator.

   Subpath of the dpf server. supported values:
   0 (default): root of the server, 1:
   "dpf/bin/platform", 2:
   "aisol/bin(dll)/platform", 3:
   "dpf/plugins", 4: "dpf/workflows".

   :param my_subpath:
   :type my_subpath: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.server_path()
   >>> op.inputs.subpath.connect(my_subpath)
   >>> # or
   >>> op.inputs.subpath(my_subpath)






