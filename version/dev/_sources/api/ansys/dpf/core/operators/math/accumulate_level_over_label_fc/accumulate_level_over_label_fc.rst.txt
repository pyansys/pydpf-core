





:class:`accumulate_level_over_label_fc`
=======================================

.. py:class:: ansys.dpf.core.operators.math.accumulate_level_over_label_fc.accumulate_level_over_label_fc(fields_container=None, label=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Compute the component-wise sum over all the fields that have the same
   ID as the label set as input in the fields container and apply
   10.0xlog10(data/10xx-12) on the result. This computation can be
   incremental. If the input fields container is connected and the
   operator is run multiple times, the output field will be on all
   the connected inputs.

   :param fields_container:
   :type fields_container: FieldsContainer
   :param label: Label of the fields container where it should
                 operate.
   :type label: str, optional

   :returns: **field**
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.math.accumulate_level_over_label_fc()

   >>> # Make input connections
   >>> my_fields_container = dpf.FieldsContainer()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_label = str()
   >>> op.inputs.label.connect(my_label)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.math.accumulate_level_over_label_fc(
   ...     fields_container=my_fields_container,
   ...     label=my_label,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: accumulate_level_over_label_fc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.math.accumulate_level_over_label_fc import accumulate_level_over_label_fc

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsAccumulateLevelOverLabelFc

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsAccumulateLevelOverLabelFc




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





