





:class:`relative_error`
=======================

.. py:class:: ansys.dpf.core.operators.math.relative_error.relative_error(value=None, reference=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Computes the relative error between a reference scalar field and
   another scalar field.

   :param value: Field or fields container with only one field
                 is expected
   :type value: Field or FieldsContainer or float
   :param reference: Field or fields container with only one field
                     is expected
   :type reference: Field or FieldsContainer or float

   :returns: * **field** (*Field*)
             * **zero_ref_scoping** (*Scoping*) -- Ids of entities where reference value is
               zero.
             * **no_ref_scoping** (*Scoping*) -- Ids of entities where there are no reference
               value.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.math.relative_error()

   >>> # Make input connections
   >>> my_value = dpf.Field()
   >>> op.inputs.value.connect(my_value)
   >>> my_reference = dpf.Field()
   >>> op.inputs.reference.connect(my_reference)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.math.relative_error(
   ...     value=my_value,
   ...     reference=my_reference,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()
   >>> result_zero_ref_scoping = op.outputs.zero_ref_scoping()
   >>> result_no_ref_scoping = op.outputs.no_ref_scoping()




.. py:currentmodule:: relative_error

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.math.relative_error import relative_error

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsRelativeError

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsRelativeError




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





