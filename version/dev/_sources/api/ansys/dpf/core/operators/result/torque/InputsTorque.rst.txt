





:class:`InputsTorque`
=====================

.. py:class:: ansys.dpf.core.operators.result.torque.InputsTorque(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   torque operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.torque()
   >>> my_fields_container = dpf.FieldsContainer()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> my_field = dpf.Field()
   >>> op.inputs.field.connect(my_field)



.. py:currentmodule:: InputsTorque

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~fields_container`
            - Allows to connect fields_container input to the operator.
          * - :py:attr:`~field`
            - Allows to connect field input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.result.torque import InputsTorque

Property detail
---------------

.. py:property:: fields_container

   Allows to connect fields_container input to the operator.

   Fields_container

   :param my_fields_container:
   :type my_fields_container: FieldsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.torque()
   >>> op.inputs.fields_container.connect(my_fields_container)
   >>> # or
   >>> op.inputs.fields_container(my_fields_container)

.. py:property:: field

   Allows to connect field input to the operator.

   Field

   :param my_field:
   :type my_field: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.result.torque()
   >>> op.inputs.field.connect(my_field)
   >>> # or
   >>> op.inputs.field(my_field)






