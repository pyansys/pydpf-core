





:class:`InputsExtractSubSc`
===========================

.. py:class:: ansys.dpf.core.operators.utility.extract_sub_sc.InputsExtractSubSc(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   extract_sub_sc operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.extract_sub_sc()
   >>> my_scopings_container = dpf.ScopingsContainer()
   >>> op.inputs.scopings_container.connect(my_scopings_container)
   >>> my_label_space = dict()
   >>> op.inputs.label_space.connect(my_label_space)
   >>> my_collapse_labels = bool()
   >>> op.inputs.collapse_labels.connect(my_collapse_labels)



.. py:currentmodule:: InputsExtractSubSc

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~scopings_container`
            - Allows to connect scopings_container input to the operator.
          * - :py:attr:`~label_space`
            - Allows to connect label_space input to the operator.
          * - :py:attr:`~collapse_labels`
            - Allows to connect collapse_labels input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.utility.extract_sub_sc import InputsExtractSubSc

Property detail
---------------

.. py:property:: scopings_container

   Allows to connect scopings_container input to the operator.

   Scopings_container

   :param my_scopings_container:
   :type my_scopings_container: ScopingsContainer

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.extract_sub_sc()
   >>> op.inputs.scopings_container.connect(my_scopings_container)
   >>> # or
   >>> op.inputs.scopings_container(my_scopings_container)

.. py:property:: label_space

   Allows to connect label_space input to the operator.

   Label space, or scoping defining the label
   space (scoping location), values to
   keep (scoping ids)

   :param my_label_space:
   :type my_label_space: dict or Scoping

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.extract_sub_sc()
   >>> op.inputs.label_space.connect(my_label_space)
   >>> # or
   >>> op.inputs.label_space(my_label_space)

.. py:property:: collapse_labels

   Allows to connect collapse_labels input to the operator.

   If set to true (default) the input label
   space (scoping location) is
   suppressed from the output scopings
   container, otherwise, label space is
   kept.

   :param my_collapse_labels:
   :type my_collapse_labels: bool

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.utility.extract_sub_sc()
   >>> op.inputs.collapse_labels.connect(my_collapse_labels)
   >>> # or
   >>> op.inputs.collapse_labels(my_collapse_labels)






