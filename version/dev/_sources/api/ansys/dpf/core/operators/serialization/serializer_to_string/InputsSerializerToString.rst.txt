





:class:`InputsSerializerToString`
=================================

.. py:class:: ansys.dpf.core.operators.serialization.serializer_to_string.InputsSerializerToString(op: ansys.dpf.core.dpf_operator.Operator)

   Bases: :py:obj:`ansys.dpf.core.inputs._Inputs`


   Intermediate class used to connect user inputs to
   serializer_to_string operator.

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serializer_to_string()
   >>> my_stream_type = int()
   >>> op.inputs.stream_type.connect(my_stream_type)
   >>> my_any_input1 = dpf.Any()
   >>> op.inputs.any_input1.connect(my_any_input1)
   >>> my_any_input2 = dpf.Any()
   >>> op.inputs.any_input2.connect(my_any_input2)



.. py:currentmodule:: InputsSerializerToString

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~stream_type`
            - Allows to connect stream_type input to the operator.
          * - :py:attr:`~any_input1`
            - Allows to connect any_input1 input to the operator.
          * - :py:attr:`~any_input2`
            - Allows to connect any_input2 input to the operator.







Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.serialization.serializer_to_string import InputsSerializerToString

Property detail
---------------

.. py:property:: stream_type

   Allows to connect stream_type input to the operator.

   0 for string (default), and 1 for binary

   :param my_stream_type:
   :type my_stream_type: int

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serializer_to_string()
   >>> op.inputs.stream_type.connect(my_stream_type)
   >>> # or
   >>> op.inputs.stream_type(my_stream_type)

.. py:property:: any_input1

   Allows to connect any_input1 input to the operator.

   Any input

   :param my_any_input1:
   :type my_any_input1: Any

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serializer_to_string()
   >>> op.inputs.any_input1.connect(my_any_input1)
   >>> # or
   >>> op.inputs.any_input1(my_any_input1)

.. py:property:: any_input2

   Allows to connect any_input2 input to the operator.

   Any input

   :param my_any_input2:
   :type my_any_input2: Any

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf
   >>> op = dpf.operators.serialization.serializer_to_string()
   >>> op.inputs.any_input2.connect(my_any_input2)
   >>> # or
   >>> op.inputs.any_input2(my_any_input2)






