





:class:`make_one_on_comp`
=========================

.. py:class:: ansys.dpf.core.operators.math.make_one_on_comp.make_one_on_comp(fieldA=None, scalar_int=None, config=None, server=None)

   Bases: :py:obj:`ansys.dpf.core.dpf_operator.Operator`


   Takes the input field's scoping and creates a field full of zeros,
   except for the indexes from pin 1 that will hold 1.0.

   :param fieldA:
   :type fieldA: Field
   :param scalar_int:
   :type scalar_int: int

   :returns: **field**
   :rtype: Field

   .. rubric:: Examples

   >>> from ansys.dpf import core as dpf

   >>> # Instantiate operator
   >>> op = dpf.operators.math.make_one_on_comp()

   >>> # Make input connections
   >>> my_fieldA = dpf.Field()
   >>> op.inputs.fieldA.connect(my_fieldA)
   >>> my_scalar_int = int()
   >>> op.inputs.scalar_int.connect(my_scalar_int)

   >>> # Instantiate operator and connect inputs in one line
   >>> op = dpf.operators.math.make_one_on_comp(
   ...     fieldA=my_fieldA,
   ...     scalar_int=my_scalar_int,
   ... )

   >>> # Get output data
   >>> result_field = op.outputs.field()




.. py:currentmodule:: make_one_on_comp

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~inputs`
            - Enables to connect inputs to the operator
          * - :py:attr:`~outputs`
            - Enables to get outputs of the operator by evaluating it



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~default_config`
            - Returns the default config of the operator.





Import detail
-------------

.. code-block:: python

    from ansys.dpf.core.operators.math.make_one_on_comp import make_one_on_comp

Property detail
---------------

.. py:property:: inputs

   Enables to connect inputs to the operator

   :returns: **inputs**
   :rtype: InputsMakeOneOnComp

.. py:property:: outputs

   Enables to get outputs of the operator by evaluating it

   :returns: **outputs**
   :rtype: OutputsMakeOneOnComp




Method detail
-------------

.. py:method:: default_config(server=None)
   :staticmethod:


   Returns the default config of the operator.

   This config can then be changed to the user needs and be used to
   instantiate the operator. The Configuration allows to customize
   how the operation will be processed by the operator.

   :param server: Server with channel connected to the remote or local instance. When
                  ``None``, attempts to use the global server.
   :type server: server.DPFServer, optional





